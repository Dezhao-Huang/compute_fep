# created by fftool

units real
boundary p p p

atom_style full
bond_style harmonic
angle_style harmonic
special_bonds lj/coul 0.0 0.0 0.5

read_data data.eq.lmp
# read_restart restart.*.lmp
# reset_timestep 0

pair_style hybrid lj/cut/coul/long 10.0 10.0
pair_modify tail yes
kspace_style pppm 1.0e-4

pair_coeff    1    1  lj/cut/coul/long    0.0028   2.7800  # Ne Ne
pair_coeff    1    2  lj/cut/coul/long    0.0000   1.0000  # Ne Hw
pair_coeff    1    3  lj/cut/coul/long    0.0208   2.9665  # Ne Ow
pair_coeff    2    2  lj/cut/coul/long    0.0000   1.0000  # Hw Hw
pair_coeff    2    3  lj/cut/coul/long    0.0000   1.0000  # Hw Ow
pair_coeff    3    3  lj/cut/coul/long    0.1554   3.1655  # Ow Ow

variable nsteps index 1000
variable nprint equal ${nsteps}/10
variable ndump equal ${nsteps}/100

variable temp equal 300.0
variable press equal 1.0

neighbor 2.0 bin

timestep 1.0

# velocity all create ${temp} 12345

fix fSHAKE all shake 0.0001 20 0 b 1 a 1

#fix fNVT all nvt temp ${temp} ${temp} 100
fix fNPT all npt temp ${temp} ${temp} 100 iso ${press} ${press} 500


# neon to sodium fep

variable lambda equal ramp(0.0,1.0)
variable sig13 equal 3.33*v_lambda+2.78*(1.0-v_lambda)
variable q1 equal v_lambda

variable dlambda equal 0.1
variable dsig13 equal 3.33*v_dlambda-2.78*v_dlambda
variable dq1 equal v_dlambda

variable nadapt equal ${nsteps}/10
variable nrepeat equal ${nadapt}/2

fix fADAPT all adapt/fep ${nadapt} &
    pair lj/cut/coul/long sigma 1 3 v_sig13 &
    atom charge 1 v_q1 &
    after yes

compute cFEP all fep ${temp} &
    pair lj/cut/coul/long sigma 1 3 v_dsig13 &
    atom charge 1 v_dq1

fix fFEP all ave/time 1 ${nrepeat} ${nadapt} c_cFEP[1] c_cFEP[2] c_cFEP[3] file fepNPT.out


# thermo_style multi
thermo_style custom step etotal evdwl ecoul elong temp vol v_lambda v_sig13 v_q1
thermo ${nprint}

# dump dCONF all custom ${ndump} dump.lammpstrj id mol type element x y z ix iy iz
# dump_modify dCONF element Ne H O

# restart ${nrestart} restart.*.lmp

run ${nsteps} post no

# write_restart restart.*.lmp
# write_data data.*.lmp
